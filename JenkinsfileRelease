parameters {
    string(name: 'tagVersion', description: 'new version number for tag')
    string(name: 'testServerUrl', defaultValue: 'https://api-qa.aspose.cloud', description: 'server url')    
}

def runtests(version)
{
    dir(version){
        try {
            stage('checkout_' + version){
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-sdk-swift.git']]])
                withCredentials([usernamePassword(credentialsId: '6839cbe8-39fa-40c0-86ce-90706f0bae5d', passwordVariable: 'AppKey', usernameVariable: 'AppSid')]) {
					sh 'mkdir -p Settings'
                    sh 'echo "{\\"AppSid\\": \\"$AppSid\\",\\"AppKey\\": \\"$AppKey\\", \\"BaseUrl\\": \\"$testServerUrl\\"}" > Settings/servercreds.json'
                }
            }
            
            docker.image('swift:' + version).inside{
                stage('build_' + version){
					sh "swift build"
				}
            
                stage('tests_' + version){
					try{
						sh "swift test"
					} finally{
						junit 'tests.xml'
					}
                }
				
				stage('clean-compiled_' + version){
					sh "rm -rf %s"
				}
            }        
        } finally {
			deleteDir()
        }
    }
}

def makerelease() {
    try {	    
        stage('Merge master to release'){
            checkout([$class: 'GitSCM', branches: [[name: '*/release']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-sdk-swift.git']]])
            sh "git config user.email 'jenkins.aspose@gmail.com'"
            sh "git config user.name 'jenkins'"
            sh "git checkout --merge release"
            sh "git reset --hard origin/release"
            sh "git merge --no-ff --allow-unrelated-histories origin/master"
            sh "git diff --name-status"			
            sh 'git commit -am "Merged master branch to release" || exit 0'
            withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
                sh "git push https://$gitUsername:$gitPass@git.auckland.dynabic.com/words-cloud/words-cloud-sdk-swift.git release"
            }
        }

        stage('Add version tag'){
			checkout([$class: 'GitSCM', branches: [[name: '*/release']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-sdk-swift.git']]])
						
				sh "git config user.email \"jenkins.aspose@gmail.com\""
				sh "git config user.name \"jenkins\""
				sh "git tag -a ${tagVersion} -m 'version ${tagVersion}' | exit 0"
				
				withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
					sh "git push https://$gitUsername:$gitPass@git.auckland.dynabic.com/words-cloud/words-cloud-sdk-swift.git ${tagVersion}"
				}
        }           
    } finally {                       
        deleteDir()
    }
}

node('words-linux') {   
    cleanWs()
    runtests("4.2")
    runtests("5.0")
    makerelease();  
}